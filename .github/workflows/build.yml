name: CI Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-linux:
    name: Build on Ubuntu
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential cmake ninja-build pkg-config \
            libeigen3-dev libspdlog-dev libpdal-dev pdal \
            libnanoflann-dev libcxxopts-dev

      - name: Configure
        run: |
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release -- -v

      - name: Test
        run: |
          ctest --test-dir build --output-on-failure | cat

      - name: Collect artifacts
        run: |
          mkdir -p artifacts
          cp -v bin/nonrigid-icp artifacts/nonrigid-icp || true
          cp -v bin/nonrigid-icp-transform artifacts/nonrigid-icp-transform || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nonrigid-icp-linux
          path: artifacts/*
          if-no-files-found: error

  build-windows:
    name: Build on Windows
    runs-on: windows-2022
    env:
      VCPKG_ROOT: ${{ github.workspace }}\\vcpkg
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v4

      - name: Setup vcpkg
        shell: pwsh
        run: |
          git clone --depth 1 https://github.com/microsoft/vcpkg "$env:VCPKG_ROOT"
          & "$env:VCPKG_ROOT\bootstrap-vcpkg.bat"

      - name: Install dependencies with vcpkg
        shell: pwsh
        run: |
          # Install PDAL with minimal 'core' feature to avoid 'draco' dependency on Windows
          & "$env:VCPKG_ROOT\vcpkg.exe" install eigen3 spdlog "pdal[core]" nanoflann cxxopts --triplet x64-windows

      - name: Configure
        shell: pwsh
        run: |
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}\\scripts\\buildsystems\\vcpkg.cmake"

      - name: Build
        shell: pwsh
        run: |
          cmake --build build --config Release -- -v

      - name: Test
        shell: pwsh
        run: |
          echo "Skipping ctest on Windows (tests invoke bash scripts)"

      - name: Collect artifacts
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path artifacts | Out-Null
          if (Test-Path "bin/nonrigid-icp.exe") { Copy-Item "bin/nonrigid-icp.exe" "artifacts/nonrigid-icp.exe" }
          if (Test-Path "bin/nonrigid-icp-transform.exe") { Copy-Item "bin/nonrigid-icp-transform.exe" "artifacts/nonrigid-icp-transform.exe" }

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nonrigid-icp-windows
          path: artifacts/*
          if-no-files-found: error
